// server.mjs
import express from 'express';
import cors from 'cors';
import logRoutes from './routes/logRoutes.mjs';
import connectDB from './config/db_connect.mjs';
const app = express();
const PORT = 3001;

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB
await connectDB();

// CORS: —Ç–æ–ª—å–∫–æ —Å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
app.use(
  cors({
    origin: 'http://localhost:4200',
    credentials: false,
  })
);

// –ü–∞—Ä—Å–∏–Ω–≥ JSON
app.use(express.json({ limit: '10kb' })); // –ª–æ–≥–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–≥—Ä–æ–º–Ω—ã–º–∏

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use((req, res, next) => {
  console.log(`[LOGGER] ${req.method} ${req.path} ‚Üê ${req.headers.origin || 'unknown'}`);
  next();
});

// –ü—É–±–ª–∏—á–Ω—ã–π API –¥–ª—è –ª–æ–≥–æ–≤
app.use('/api', logRoutes);

// –°—Ç–∞—Ç—É—Å-—ç–Ω–¥–ø–æ–∏–Ω—Ç
app.get('/health', (req, res) => {
  res.json({ status: 'ok', service: 'logger', timestamp: new Date().toISOString() });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404
app.use('*', (req, res) => {
  res.status(404).json({ error: '–ú–∞—Ä—à—Ä—É—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω' });
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' });
});

app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–∏—Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`‚û°Ô∏è  –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–æ–≥–∏ —Å http://localhost:4200`);
  console.log(`üìä –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ MongoDB (logs_db.logs)`);
  console.log(`üõ°Ô∏è  Rate limit: 100 –∑–∞ 15 –º–∏–Ω —Å –æ–¥–Ω–æ–≥–æ IP`);
});